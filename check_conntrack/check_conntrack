#!/usr/bin/perl
#
#    check_conntrack nagios plugin
#    Copyright (C) 2016 Nicolas Limage
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
use strict;
use warnings;
use 5.008;
#use lib '/usr/lib/nagios/plugins/lib';
use Nagios::Plugin;

my $np = Nagios::Plugin->new(
	shortname => 'CONNTRACK',
	usage => "usage: check_conntrack <options>\n   use --help for more info",
	plugin => 'CONNTRACK',
	version => '1.0'
);

#----------------------------------------
# Option Parsing
#----------------------------------------

$np->add_arg(
	spec => 'warning|w=s',
	help => "-w, --warning=THRESHOLD\n   "
          . "warning threshold for the number of connections\n "
          . "See http://nagiosplug.sourceforge.net/"
          . "developer-guidelines.html#THRESHOLDFORMAT "
          . "for the threshold format. ",
);

$np->add_arg(
	spec => 'critical|c=s',
	help => "-c, --critical=THRESHOLD\n   "
          . "critical threshold for the number of connections\n "
          . "See http://nagiosplug.sourceforge.net/"
          . "developer-guidelines.html#THRESHOLDFORMAT "
          . "for the threshold format. ",
);

$np->add_arg(
  spec => "wpct|W=i",
  help => "-W, --wpct=THRESHOLD\n   "
          . "critical threshold for percentage of "
          . "the max number of tracked connections\n "
          . "(relative to net.nf_conntrack_max).",
  default => 100,
);

$np->add_arg(
  spec => "cpct|C=i",
  help => "-C, --cpct=THRESHOLD\n   "
          . "warning threshold for percentage of "
          . "the max number of tracked connections\n "
          . "(relative to net.nf_conntrack_max).",
  default => 100,
);

$np->getopts();

# Safety Net
alarm $np->opts->timeout;

#----------------------------------------
# Probing Values
#----------------------------------------

my $value = `conntrack -C`;
$value =~ m/^\d+$/ or $np->nagios_die("invalid value: $value");
$value = int($value);

my $conntrack_max = `sysctl -n net.nf_conntrack_max`;
$conntrack_max =~ m/^\d+$/ or $np->nagios_die("invalid value: $conntrack_max");
$conntrack_max = int($conntrack_max);

#----------------------------------------
# Health Checks
#----------------------------------------

my $code;

$code = $np->check_threshold(check => $value,
                             warning => $np->opts->warning,
                             critical => $np->opts->critical);
$np->add_message($code, sprintf("current connections: %s", $value));

my $conntrack_pct = 100.0 * $value / $conntrack_max;

$code = $np->check_threshold(check => $conntrack_pct,
                             warning => $np->opts->wpct,
                             critical => $np->opts->cpct);
$np->add_message($code, sprintf("table usage: %02.2f%%", $conntrack_pct));

#----------------------------------------
# Performance Data
#----------------------------------------

$np->add_perfdata(label => "connections", value => $value,
                  min => 0, max => $conntrack_max);

#----------------------------------------
# Finish
#----------------------------------------

my ($exit_code, $exit_message) = $np->check_messages(join => ', ');
$np->nagios_exit($exit_code, $exit_message);
